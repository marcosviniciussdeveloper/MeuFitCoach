// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence;

#nullable disable

namespace MeuFitCoach.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MeuFitCoach.Domain.Treino.Exercicio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DescricaoExercicio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IntrucoesExercicio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeExercicio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Exercicios");
                });

            modelBuilder.Entity("MeuFitCoach.Domain.Treino.ExercicioDaSessao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ExercicioId")
                        .HasColumnType("uuid");

                    b.Property<int>("OrdemDaSessao")
                        .HasColumnType("integer");

                    b.Property<string>("Repeticao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Series")
                        .HasColumnType("integer");

                    b.Property<Guid>("SessaoDeTreinoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ExercicioId");

                    b.HasIndex("SessaoDeTreinoId");

                    b.ToTable("ExercicioDaSessao");
                });

            modelBuilder.Entity("MeuFitCoach.Domain.Treino.PlanoDeTreino", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataDeInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataDeTermino")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FrequenciaSemanal")
                        .HasColumnType("integer");

                    b.Property<string>("NomeTreino")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ObjetivoDoTreino")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("PlanoAtivo")
                        .HasColumnType("boolean");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PlanoDeTreino");
                });

            modelBuilder.Entity("MeuFitCoach.Domain.Treino.SessaoDeTreino", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeSessaoTreino")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer");

                    b.Property<Guid>("PlanoDeTreinoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PlanoDeTreinoId");

                    b.ToTable("SessaoDeTreino");
                });

            modelBuilder.Entity("MeuFitCoach.Domain.Usuarios.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Altura")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumeroWhatsapp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Objetivo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Peso")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("MeuFitCoach.Domain.Treino.ExercicioDaSessao", b =>
                {
                    b.HasOne("MeuFitCoach.Domain.Treino.Exercicio", "Exercicio")
                        .WithMany("ExercicioDaSessao")
                        .HasForeignKey("ExercicioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MeuFitCoach.Domain.Treino.SessaoDeTreino", "SessaoDeTreino")
                        .WithMany("ListaDeExercicios")
                        .HasForeignKey("SessaoDeTreinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercicio");

                    b.Navigation("SessaoDeTreino");
                });

            modelBuilder.Entity("MeuFitCoach.Domain.Treino.PlanoDeTreino", b =>
                {
                    b.HasOne("MeuFitCoach.Domain.Usuarios.Usuario", "Usuario")
                        .WithMany("PlanosDeTreino")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MeuFitCoach.Domain.Treino.SessaoDeTreino", b =>
                {
                    b.HasOne("MeuFitCoach.Domain.Treino.PlanoDeTreino", "PlanoDeTreino")
                        .WithMany("SessoesDeTreino")
                        .HasForeignKey("PlanoDeTreinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanoDeTreino");
                });

            modelBuilder.Entity("MeuFitCoach.Domain.Treino.Exercicio", b =>
                {
                    b.Navigation("ExercicioDaSessao");
                });

            modelBuilder.Entity("MeuFitCoach.Domain.Treino.PlanoDeTreino", b =>
                {
                    b.Navigation("SessoesDeTreino");
                });

            modelBuilder.Entity("MeuFitCoach.Domain.Treino.SessaoDeTreino", b =>
                {
                    b.Navigation("ListaDeExercicios");
                });

            modelBuilder.Entity("MeuFitCoach.Domain.Usuarios.Usuario", b =>
                {
                    b.Navigation("PlanosDeTreino");
                });
#pragma warning restore 612, 618
        }
    }
}
